version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: 'redis:7.0.5'
    ports:
      - '6379:6379'

  postgres:
    image: 'postgres:15.1'
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: tbilisi_apts

  scraper:
    build: ./scraper
    volumes:
      - ./scraper/scraper:/app/scraper
    env_file:
      - ./scraper/.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=broker:29092
      - REDIS_HOST=redis
    ports:
      - 6800:6800
    depends_on:
      - broker
      - redis

  bot:
    build: './bot'
    volumes:
      - ./bot/bot:/app
    env_file:
      - ./bot/.env
    environment:
      - KAFKA_BOOTSTRAP_SERVER=broker:29092
    depends_on:
      - broker
    restart: on-failure:10

  scheduler:
    build: './scheduler'
    volumes:
      - ./scheduler/scheduler:/app/scheduler
    env_file:
      - ./scheduler/.env
    environment:
      - POSTGRES_HOST=postgres
      - KAFKA_BOOTSTRAP_SERVER=broker:29092
      - SCRAPY_SERVER_URL=http://scraper:6800/schedule.json
    depends_on:
      - broker
      - postgres
      - scraper
    restart: on-failure:10

volumes:
  pgdata:
